{"ast":null,"code":"import _asyncToGenerator from \"C:/dev/Angular workshop/Day2-AngularBasics/misterBTCoin-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./contact.service\";\nexport class ContactResolverResolver {\n  constructor(contactService) {\n    this.contactService = contactService;\n  }\n\n  resolve(route, state) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        contactId\n      } = route.params;\n      const contact = yield lastValueFrom(_this.contactService.getContactById(contactId));\n      return contact;\n    })();\n  }\n\n}\n\nContactResolverResolver.ɵfac = function ContactResolverResolver_Factory(t) {\n  return new (t || ContactResolverResolver)(i0.ɵɵinject(i1.ContactService));\n};\n\nContactResolverResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContactResolverResolver,\n  factory: ContactResolverResolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,SAASA,aAAT,QAA8C,MAA9C;;;AAOA,OAAM,MAAOC,uBAAP,CAA8B;EAClCC,YAAoBC,cAApB,EAAiD;IAA7B;EAAgC;;EAC9CC,OAAO,CAACC,KAAD,EAAgCC,KAAhC,EAA0D;IAAA;;IAAA;MACrE,MAAM;QAACC;MAAD,IAAYF,KAAK,CAACG,MAAxB;MACA,MAAMC,OAAO,SAAQT,aAAa,CAAC,KAAI,CAACG,cAAL,CAAoBO,cAApB,CAAmCH,SAAnC,CAAD,CAAlC;MACA,OAAOE,OAAP;IAHqE;EAItE;;AANiC;;;mBAAvBR,yBAAuBU;AAAA;;;SAAvBV;EAAuBW,SAAvBX,uBAAuB;EAAAY,YAFtB","names":["lastValueFrom","ContactResolverResolver","constructor","contactService","resolve","route","state","contactId","params","contact","getContactById","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\dev\\Angular workshop\\Day2-AngularBasics\\misterBTCoin-angular\\src\\app\\service\\contact-resolver.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { lastValueFrom, Observable, of } from 'rxjs';\nimport { Contact } from '../model/contact'\nimport { ContactService } from './contact.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactResolverResolver implements Resolve<Promise<Contact>> {\n  constructor(private contactService:ContactService){}\n  async resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n    const {contactId}=route.params\n    const contact= await lastValueFrom(this.contactService.getContactById(contactId))\n    return contact;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}